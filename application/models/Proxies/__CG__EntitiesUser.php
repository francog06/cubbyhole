<?php

namespace Proxies\__CG__\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class User extends \Entities\User implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setEmail($email)
    {
        $this->__load();
        return parent::setEmail($email);
    }

    public function getEmail()
    {
        $this->__load();
        return parent::getEmail();
    }

    public function setPassword($password)
    {
        $this->__load();
        return parent::setPassword($password);
    }

    public function getPassword()
    {
        $this->__load();
        return parent::getPassword();
    }

    public function setRegistrationDate($registrationDate)
    {
        $this->__load();
        return parent::setRegistrationDate($registrationDate);
    }

    public function getRegistrationDate()
    {
        $this->__load();
        return parent::getRegistrationDate();
    }

    public function setUserLocationIp($userLocationIp)
    {
        $this->__load();
        return parent::setUserLocationIp($userLocationIp);
    }

    public function getUserLocationIp()
    {
        $this->__load();
        return parent::getUserLocationIp();
    }

    public function setIsAdmin($isAdmin)
    {
        $this->__load();
        return parent::setIsAdmin($isAdmin);
    }

    public function getIsAdmin()
    {
        $this->__load();
        return parent::getIsAdmin();
    }

    public function addPlanHistory(\Entities\PlanHistory $planHistorys)
    {
        $this->__load();
        return parent::addPlanHistory($planHistorys);
    }

    public function removePlanHistory(\Entities\PlanHistory $planHistorys)
    {
        $this->__load();
        return parent::removePlanHistory($planHistorys);
    }

    public function getPlanHistorys()
    {
        $this->__load();
        return parent::getPlanHistorys();
    }

    public function addFolder(\Entities\Folder $folders)
    {
        $this->__load();
        return parent::addFolder($folders);
    }

    public function removeFolder(\Entities\Folder $folders)
    {
        $this->__load();
        return parent::removeFolder($folders);
    }

    public function getFolders()
    {
        $this->__load();
        return parent::getFolders();
    }

    public function addFile(\Entities\File $files)
    {
        $this->__load();
        return parent::addFile($files);
    }

    public function removeFile(\Entities\File $files)
    {
        $this->__load();
        return parent::removeFile($files);
    }

    public function getFiles()
    {
        $this->__load();
        return parent::getFiles();
    }

    public function addShared(\Entities\Share $shared)
    {
        $this->__load();
        return parent::addShared($shared);
    }

    public function removeShared(\Entities\Share $shared)
    {
        $this->__load();
        return parent::removeShared($shared);
    }

    public function getShared()
    {
        $this->__load();
        return parent::getShared();
    }

    public function addSharedWithMe(\Entities\Share $sharedWithMe)
    {
        $this->__load();
        return parent::addSharedWithMe($sharedWithMe);
    }

    public function removeSharedWithMe(\Entities\Share $sharedWithMe)
    {
        $this->__load();
        return parent::removeSharedWithMe($sharedWithMe);
    }

    public function getSharedWithMe()
    {
        $this->__load();
        return parent::getSharedWithMe();
    }

    public function jsonSerialize()
    {
        $this->__load();
        return parent::jsonSerialize();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'email', 'password', 'registration_date', 'user_location_ip', 'is_admin', 'plan_historys', 'folders', 'files', 'shared', 'shared_with_me');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}